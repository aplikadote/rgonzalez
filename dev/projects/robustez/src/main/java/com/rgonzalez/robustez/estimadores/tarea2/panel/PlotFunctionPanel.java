/*
 * PlotFunctionPanel.java
 *
 * Created on 26 de noviembre de 2008, 15:57
 */
package com.rgonzalez.robustez.estimadores.tarea2.panel;

import java.awt.BasicStroke;
import java.awt.Color;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RectangleInsets;

/**
 *
 * @author  Administrador
 */
public class PlotFunctionPanel extends javax.swing.JPanel {

    private int sliderMinimun = 0;
    private int sliderMaximun;
    private double realMinimun;
    private double realMaximun;
    private double realSliderRate;
    private double sliderRealRate;
    private JFreeChart chart;
    private ValueMarker valueY;
    private ValueMarker valueX;
    private int n;
    private double[][] data;
    private double k = 1;

    /** Creates new form PlotFunctionPanel */
    public PlotFunctionPanel(double[][] data, String title, String xTitle, String yTitle) {
        initComponents();
        this.data = data;
        initValues();

        this.labelPar.setText(yTitle);
        this.textPar.setText("");
        chart = getChart(data, title, xTitle, yTitle);
        panelCenter.add(new ChartPanel(chart));
        updateScroll(k);
        this.sliderCross.setValue(toSlider(k));
    }

    public void initValues() {
        this.n = data.length;
        this.sliderMaximun = n;
        this.sliderCross.setMinimum(sliderMinimun);
        this.sliderCross.setMaximum(n);
        this.realMinimun = data[0][0];
        this.realMaximun = data[n - 1][0];
        this.realSliderRate = (realMaximun - realMinimun) / (sliderMaximun - sliderMinimun);
        this.sliderRealRate = 1 / realSliderRate;
    }

    public XYSeriesCollection getDataset(double[][] myData) {
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries serie = new XYSeries("Serie");
        for (int i = 0; i < myData.length; i++) {
            serie.add(myData[i][0], myData[i][1]);
        }
        dataset.addSeries(serie);
        return dataset;
    }

    private JFreeChart getChart(double[][] data, String title, String xTitle, String yTitle) {

        JFreeChart myChart = ChartFactory.createXYLineChart(
                title,
                xTitle,
                yTitle,
                getDataset(data),
                PlotOrientation.VERTICAL,
                false,
                false,
                false);

        XYPlot plot = myChart.getXYPlot();
        plot.setBackgroundPaint(Color.white);
        valueY = new ValueMarker(0, Color.BLUE, new BasicStroke());
        valueX = new ValueMarker(0, Color.BLUE, new BasicStroke());
        valueY.setLabel(Double.toString(0));
        valueX.setLabel(Double.toString(0));
        valueY.setLabelOffset(new RectangleInsets(10, 200, 0, 0));
        valueX.setLabelOffset(new RectangleInsets(20, -20, 0, 0));
        plot.addRangeMarker(valueY);
        plot.addDomainMarker(valueX);

        return myChart;
    }

    private double toReal(int sliderValue) {
        return realSliderRate * sliderValue + realMinimun;
    }

    private int toSlider(double realValue) {
        return (int) (sliderRealRate * realValue + sliderMinimun);
    }

    public JFreeChart getChart() {
        return this.chart;
    }

    public void update(double[][] myData) {
        this.data = myData;
        XYDataset dataset = getDataset(myData);
        this.chart.getXYPlot().setDataset(dataset);
        double realValue = Double.parseDouble(this.textValue.getText());
        this.updateScroll(realValue);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCenter = new javax.swing.JPanel();
        panelSouth = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        sliderCross = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        labelPar = new javax.swing.JLabel();
        textPar = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        panelCenter.setLayout(new javax.swing.BoxLayout(panelCenter, javax.swing.BoxLayout.LINE_AXIS));
        add(panelCenter);

        panelSouth.setLayout(new javax.swing.BoxLayout(panelSouth, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("                ");
        panelSouth.add(jLabel2);

        sliderCross.setMaximum(1000);
        sliderCross.setPreferredSize(new java.awt.Dimension(200, 35));
        sliderCross.setRequestFocusEnabled(false);
        sliderCross.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderCrossStateChanged(evt);
            }
        });
        panelSouth.add(sliderCross);

        add(panelSouth);

        jLabel1.setText("K");
        jPanel1.add(jLabel1);

        textValue.setPreferredSize(new java.awt.Dimension(140, 20));
        textValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textValueActionPerformed(evt);
            }
        });
        jPanel1.add(textValue);

        jLabel3.setText("      ");
        jPanel1.add(jLabel3);

        labelPar.setText("<par>");
        jPanel1.add(labelPar);

        textPar.setEditable(false);
        textPar.setPreferredSize(new java.awt.Dimension(140, 20));
        jPanel1.add(textPar);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

private void sliderCrossStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderCrossStateChanged
    double realValue = toReal(this.sliderCross.getValue());
    updateScroll(realValue);
}//GEN-LAST:event_sliderCrossStateChanged

    private void updateScroll(double realValue) {
        if (chart != null) {
            XYPlot plot = this.chart.getXYPlot();
            plot.removeRangeMarker(valueY);
            plot.removeDomainMarker(valueX);

            double yValue;
            try {
                yValue = data[toSlider(realValue) - 1][1];
            } catch (Exception e) {
                yValue = n - 1;
                System.out.println("Fuera del borde");
            }
            valueY = new ValueMarker(yValue, Color.BLUE, new BasicStroke());
            valueX = new ValueMarker(realValue, Color.BLUE, new BasicStroke());
            valueY.setLabel(Double.toString(yValue));
            valueX.setLabel(Double.toString(realValue));
            valueY.setLabelOffset(new RectangleInsets(10, 200, 0, 0));
            valueX.setLabelOffset(new RectangleInsets(20, -30, 0, 0));
            plot.addRangeMarker(valueY);
            plot.addDomainMarker(valueX);
            this.textValue.setText(Double.toString(realValue));
            this.textPar.setText(Double.toString(yValue));
        }
    }

private void textValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textValueActionPerformed
    try {
        double realValue = Double.parseDouble(this.textValue.getText());
        double yValue = data[toSlider(realValue) - 1][1];
        this.textPar.setText(Double.toString(yValue));
        this.sliderCross.setValue(toSlider(realValue));
        updateScroll(realValue);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Se ha capturado una cholga", "Cholga", JOptionPane.WARNING_MESSAGE);
    }

}//GEN-LAST:event_textValueActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelPar;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelSouth;
    private javax.swing.JSlider sliderCross;
    private javax.swing.JTextField textPar;
    private javax.swing.JTextField textValue;
    // End of variables declaration//GEN-END:variables
}
